return {
  // Set defaultToken to invalid to see what you do not tokenize yet
  // defaultToken: 'invalid',

  // C# style strings
  escapes: /\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,

  // The main tokenizer for our languages
  tokenizer: {
    root: [
      //booleans
      [/((\#[tT])|(\#[fF])|(\#true)|(\#false))/, 'number'],
      //characters
      [/(((((\#\\null)|(\#\\nul)|(\#\\backspace)|(\#\\tab)|(\#\\newline)|(\#\\linefeed)|(\#\\vtab)|(\#\\page)|(\#\\return)|(\#\\space)|(\#\\rubout))))|(\#\\(([0-7]){1,3}))|(\#\\u(([0-9abcdefABCDEF]){1,4}))|(\#\\U(([0-9abcdefABCDEF]){1,8}))|(\#\\.))/, 'number'],
      //binary numbers
      [/((\#[bBeEiI])*(\#[ei])?(((((((\+)|(\-)))?((([0-1])+)|(([0-1])+\/([0-1])+)))|(((((\+)|(\-)))?((([0-1])+)|(([0-1])+\/([0-1])+)))?((\+)|(\-))(((([0-1])+)|(([0-1])+\/([0-1])+)))?i)))|((((((((\+)|(\-)))?((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([sldef](((\+)|(\-)))?([0-1])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))|(((((((((\+)|(\-)))?((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([sldef](((\+)|(\-)))?([0-1])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?((\+)|(\-))(((((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([sldef](((\+)|(\-)))?([0-1])+))?)|((((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?i)|((((((\+)|(\-)))?((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([sldef](((\+)|(\-)))?([0-1])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f)))))@(((((\+)|(\-)))?((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([sldef](((\+)|(\-)))?([0-1])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))))))))/, 'number.binary'],
      //octal numbers
      [/((\#[oOeEiI])*(\#[ei])?(((((((\+)|(\-)))?((([0-7])+)|(([0-7])+\/([0-7])+)))|(((((\+)|(\-)))?((([0-7])+)|(([0-7])+\/([0-7])+)))?((\+)|(\-))(((([0-7])+)|(([0-7])+\/([0-7])+)))?i)))|((((((((\+)|(\-)))?((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([sldef](((\+)|(\-)))?([0-7])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))|(((((((((\+)|(\-)))?((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([sldef](((\+)|(\-)))?([0-7])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?((\+)|(\-))(((((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([sldef](((\+)|(\-)))?([0-7])+))?)|((((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?i)|((((((\+)|(\-)))?((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([sldef](((\+)|(\-)))?([0-7])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f)))))@(((((\+)|(\-)))?((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([sldef](((\+)|(\-)))?([0-7])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))))))))/, 'number.octal'],
      //decimal numbers
      [/((\#[dDeEiI])*(\#[ei])?(((((((\+)|(\-)))?((([0-9])+)|(([0-9])+\/([0-9])+)))|(((((\+)|(\-)))?((([0-9])+)|(([0-9])+\/([0-9])+)))?((\+)|(\-))(((([0-9])+)|(([0-9])+\/([0-9])+)))?i)))|((((((((\+)|(\-)))?((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([sldef](((\+)|(\-)))?([0-9])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))|(((((((((\+)|(\-)))?((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([sldef](((\+)|(\-)))?([0-9])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?((\+)|(\-))(((((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([sldef](((\+)|(\-)))?([0-9])+))?)|((((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))?i)|((((((\+)|(\-)))?((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([sldef](((\+)|(\-)))?([0-9])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f)))))@(((((\+)|(\-)))?((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([sldef](((\+)|(\-)))?([0-9])+))?)|(((\+)|(\-))(((inf\.0)|(nan\.0)|(inf\.f)|(nan\.f))))))))))))/, 'number'],
      //hex
      [/(\#([xXeEiI])*(\#[ei])?(((((((\+)|(\-)))?((([0-9abcdefABCDEF])+)|(([0-9abcdefABCDEF])+\/([0-9abcdefABCDEF])+)))|(((((\+)|(\-)))?((([0-9abcdefABCDEF])+)|(([0-9abcdefABCDEF])+\/([0-9abcdefABCDEF])+)))?((\+)|(\-))(((([0-9abcdefABCDEF])+)|(([0-9abcdefABCDEF])+\/([0-9abcdefABCDEF])+)))?i)))|((((((((\+)|(\-)))?((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([sl](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))|(((((((((\+)|(\-)))?((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([sl](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))?((\+)|(\-))(((((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([sl](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|((((inf\.)|(nan\.))[0ftT]))))?i)|((((((\+)|(\-)))?((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([sl](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT])))@(((((\+)|(\-)))?((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([sl](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))))))))/, 'number.hex'],
      //floats
      [/(((\#[bB](((((\+)|(\-)))?((([0-1])+(\#)*(\.)?(\#)*)|((([0-1])+)?\.([0-1])+(\#)*)|(([0-1])+(\#)*\/([0-1])+(\#)*))(([tT](((\+)|(\-)))?([0-1])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))|(\#[oO](((((\+)|(\-)))?((([0-7])+(\#)*(\.)?(\#)*)|((([0-7])+)?\.([0-7])+(\#)*)|(([0-7])+(\#)*\/([0-7])+(\#)*))(([tT](((\+)|(\-)))?([0-7])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))|(\#[xX](((((\+)|(\-)))?((([0-9abcdefABCDEF])+(\#)*(\.)?(\#)*)|((([0-9abcdefABCDEF])+)?\.([0-9abcdefABCDEF])+(\#)*)|(([0-9abcdefABCDEF])+(\#)*\/([0-9abcdefABCDEF])+(\#)*))(([tT](((\+)|(\-)))?([0-9abcdefABCDEF])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))|((\#[bB])?(((((\+)|(\-)))?((([0-9])+(\#)*(\.)?(\#)*)|((([0-9])+)?\.([0-9])+(\#)*)|(([0-9])+(\#)*\/([0-9])+(\#)*))(([tT](((\+)|(\-)))?([0-9])+))?)|(((\+)|(\-))(((inf\.)|(nan\.))[0ftT]))))))/, 'number.float'],
      //identifiers
      [/([^#()\[\]{}",'`; \s]([^()\[\]{}",'`;\ \s])*)/, 'type.identifier'],

      //symbols
      [/\'([^#()\[\]{}",'`; \s]([^()\[\]{}",'`;\ \s])*)/, 'string'],
      //quoted empty list
      [/\'\(\)/, 'constant'],
      // whitespace
      { include: '@whitespace' },
      //keywords
      [/\#\:([^#()\[\]{}",'`; \s]([^()\[\]{}",'`;\ \s])*)/, 'keyword'],
      //syntax quoted identifiers
      [/\#\'([^#()\[\]{}",'`; \s]([^()\[\]{}",'`;\ \s])*)/, 'string'],
      //comments
      [/;.*$/, 'comment'],
      [/\#;/, 'comment'],
      [/\#\|/,    'comment', '@push' ],
      ["\|\#",    'comment', '@pop'  ],
      
      // delimiters and operators
      [/[{}()\[\]]/, '@brackets'],

      // @ annotations.
      // As an example, we emit a debugging log message on these tokens.
      // Note: message are supressed during the first load -- change some lines to see them.
      [/@\s*[a-zA-Z_\$][\w\$]*/, { token: 'annotation', log: 'annotation token: $0' }],


      // strings
      [/"([^"\\]|\\.)*$/, 'string.invalid' ],  // non-teminated string
      [/"/,  { token: 'string.quote', bracket: '@open', next: '@string' } ],

    ],

    comment: [
      [/[^\#\|]*/, 'comment' ],
      [/[\#\|]/,   'comment' ]
    ],

    string: [
      [/[^\\"]+/,  'string'],
      [/@escapes/, 'string.escape'],
      [/\\./,      'string.escape.invalid'],
      [/"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]
    ],

    whitespace: [
      [/[ \t\r\n]+/, 'white'],
      [/\/\*/,       'comment', '@comment' ],
      [/\/\/.*$/,    'comment'],
    ],
  },
};


