#lang racket
;; Seashell - a C Development Environment.
;; Copyright (C) 2013 The Seashell Maintainers.
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; See also 'ADDITIONAL TERMS' at the end of the included LICENSE file.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.
(provide read-config config-set! config-refresh!)

;; (read-config key) takes a symbol? key, and looks it up in the config hash;
;; produces the corresponding value, or dies with an error if the key was not
;; found
(define (read-config k)
  (hash-ref config-hash k (lambda () (error "ERROR: read-config: key `~a' not found\n" k))))

;; (config-set! key val) takes a symbol? key and any val, and mutates the
;; config to associate the key with the value. If the key is already there, it
;; updates the value it points to; if it isn't there, it creates a new
;; key/value pair in the hash
(define (config-set! key val)
  (hash-set! config-hash key val))

;; (config-refresh!) rereads the config file, and resets the current
;; configuration to the default. The purpose of this function is to reset all
;; changes made by config-set!
(define (config-refresh!)
  (set! config-hash (make-config)))

;; These constants are used to build several configuration values.
(define seashell-install-path
  "@CMAKE_INSTALL_PREFIX@")

(define seashell-numeric-debug
  @SEASHELL_DEBUG@)

;; generate a new (fresh) configuration
(define (make-config)

    ;; default configuration values
    (define config-hash (make-hash (list

      ;; Enable debug mode execution (corresponds to seashell-numeric-debug value by default)
      (cons 'debug                         (= seashell-numeric-debug 1))

      ;; Backend target host. The gateway will attempt to start user sessions on this host
      ;; via SSH.
      (cons 'host                          "localhost")

      ;; Location of per-user configuration directory.
      (cons 'seashell                      (build-path (find-system-path 'home-dir) ".seashell"))

      ;; Location of install path.
      (cons 'seashell-install              (build-path seashell-install-path))
      
      ;; Location of SSL key.
      (cons 'ssl-key                       (build-path seashell-install-path "etc" "keys" "server-key.pem"))

      ;; Location of SSL certificate.
      (cons 'ssl-cert                      (build-path seashell-install-path "etc" "keys" "server.pem"))

      ;; Location of SSH tunnel binary.
      (cons 'tunnel-binary                 (build-path seashell-install-path "bin" "seashell-tunnel"))

      ;; Location of Seashell crypto library.
      (cons 'seashell-crypto               (build-path seashell-install-path "lib" "libseashell-crypto"))

      ;; Location of Seashell security library.
      (cons 'seashell-security             (build-path seashell-install-path "lib" "libseashell-security"))

      ;; Location of Seashell clang library.
      (cons 'seashell-clang                (build-path seashell-install-path "lib" "libseashell-clang"))

      ;; Location of Seashell git library.
      (cons 'seashell-git                  (build-path seashell-install-path "lib" "libseashell-git"))

      ;; Location of Seashell collects.
      (cons 'seashell-collects             (build-path seashell-install-path "share" "collects"))

      ;; Timeout in milliseconds after which a per-user backend process, having
      ;; received no new messages, will terminate.
      (cons 'backend-client-idle-timeout   1800000)

      ;; Timeout in milliseconds after which a per-user backend connection,
      ;; having received no new messages, will quit.
      (cons 'backend-client-connection-timeout 900000)

      ;; Timeout in seconds after which an in-progress gateway login will be killed.
      (cons 'backend-login-timeout         30)

      ;; Default binary to invoke when linking.
      (cons 'system-linker                 "/usr/bin/cc")

      ;; Prefix on linker flags.
      (cons 'linker-flag-prefix            "-Wl,")
    )))

    ;; attempt to override default config values with values read from config file
    (define config-file (build-path seashell-install-path "etc" "seashell_config.rkt"))
      (with-handlers ([exn:fail? void]) (call-with-input-file* config-file
        (lambda (handle)
          (cond [handle
            (define cfg (read handle))
            (when (not (list? cfg)) (error "ERROR: ~a: config file should be an association list\n" config-file))
            (map (lambda (x) (match x
                [(list key val) (hash-set! config-hash key val)]
                [e (error (format "ERROR: ~a: element `~s' is not a key-value pair\n" config-file e))]))
              cfg)
          (void)]))))

    config-hash)

;; the hash table holding the configuration
(define config-hash (make-config))
